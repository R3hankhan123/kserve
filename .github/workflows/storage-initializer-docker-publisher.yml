name: Storage Intializer Docker Publisher

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
      - test
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: storage-initializer
  IMAGE_REGISTRY: quay.io
  IMAGE_ORG: r3hankhan
  QUAYIO_USERNAME: r3hankhan
  QUAYIO_PASSWORD: FI58faza0po36UOtaHKgc1TFV++AMq5GUVT36m2m5y+MGlwOC+fwxGjwdOZCM8sWgphX7anNhlbkAj+TDTKU9A==

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Run tests
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64, linux/arm64/v8, linux/s390x
          context: python
          file: python/storage-initializer.Dockerfile
          push: false
          # https://github.com/docker/buildx/issues/1533
          provenance: false

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test
    env:
      IMAGE_NAME: storage-initializer
      IMAGE_REGISTRY: quay.io
      IMAGE_ORG: r3hankhan
      QUAYIO_USERNAME: r3hankhan
      QUAYIO_PASSWORD: FI58faza0po36UOtaHKgc1TFV++AMq5GUVT36m2m5y+MGlwOC+fwxGjwdOZCM8sWgphX7anNhlbkAj+TDTKU9A==

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ env.QUAYIO_USERNAME }}
          password: ${{ env.QUAYIO_PASSWORD }}

      - name: Export version variable
        run: |
          IMAGE_ID=quay.io/r3hankhan/kserve/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          # [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo VERSION=$VERSION >> $GITHUB_ENV
          echo IMAGE_ID=$IMAGE_ID >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64, linux/arm64/v8, linux/s390x
          context: python
          file: python/storage-initializer.Dockerfile
          push: true
          tags: ${{ env.IMAGE_ID }}:${{ env.VERSION }}
          # https://github.com/docker/buildx/issues/1533
          provenance: false
